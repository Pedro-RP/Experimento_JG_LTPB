% chain = without_TMT(tree_file_address, numtrials)
%
% This function returns a chain generated by tau when tau doesn't have a
% transition matrix.
%
% INPUT:
%
% tree_file_address = adress of the file containing the file structure.
% numtrials = length of the chain
%
% OUTPUT:
% chain = the stochastic chain

function chain = without_TMT(tree_file_address, numtrials)
    
    [contexts, PM, ~, ~] = build_treePM (tree_file_address);

    CM = zeros(size(PM,1),size(PM,2));
    IM = zeros(size(PM,1),size(PM,2));
    for a = 1:size(PM,1)
        [B, I] = sort(PM(a,:),'ascend') ;
        IM(a,:) = I-1;
        A = PM(a,I);
        aux = 0;
        for b = 1:size(PM,2)
        aux = aux+PM(a,IM(a,b)+1);
        CM(a,b) = aux;
        end
    end

    chain = zeros(1,numtrials);
    beg = contexts{1,randi(length(contexts))};
    chain(1,1:length(beg)) = beg;

    for a = length(beg)+1:numtrials
        aux = 1; found = 0;
        while found == 0
            if (a-aux) <= 0
            chain = []; % unable to grow the sequence
            return
            end
        u = chain(a-aux:a-1);

            for b = 1:length(contexts)
            found = isequal(contexts{1,b},u);
                if found
                    in_w = b;
                    break 
                end
            end
            aux = aux+1;
        end
        % growing the sequence
        x = rand(); aux2 = 0;
        for b = 1:size(CM,2)
           if (x >= aux)&&(x <= CM(in_w,b))
           chain(1,a) = IM(in_w,b); 
           break
           else
           aux = CM(in_w,b);
           end
        end
    end
end